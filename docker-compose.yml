version: "3.2"

services:
  postgres-keycloak:
      container_name: postgres-keycloak
      image: postgres
      environment:
        POSTGRES_DB: keycloak
        POSTGRES_USER: keycloak
        POSTGRES_PASSWORD: password
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:20.0
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT_BACKCHANNEL: "true"
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-keycloak:5432/keycloak?characterEncoding=UTF-8
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: "true"
      KC_LOG_LEVEL: info
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health/ready" ]
      interval: 15s
      timeout: 2s
      retries: 15
    command: start-dev
    ports:
      - 8080:8080
  postgres-payGet:
    container_name: postgres-peyGet
    image: postgres
    environment:
      POSTGRES_DB: peyGet
      POSTGRES_USER: peyGet
      POSTGRES_PASSWORD: peyGet
  payGet:
    container_name: payGet
    image: openjdk:17-alpine
    build:
      context: payGet
      dockerfile: Dockerfile
    ports:
      - 9090:9090
  app:
    container_name: react-app
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./frontend/my-app:/app
      - /app/node_modules